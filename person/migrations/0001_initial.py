# Generated by Django 5.2.1 on 2025-10-18 10:21

import django.db.models.deletion
import django.utils.timezone
import person.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('custom_search', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('business_name', models.CharField(blank=True, max_length=255, verbose_name='Business Name')),
                ('real_name', models.CharField(blank=True, max_length=255, verbose_name='Real Name')),
                ('person_profile_picture', models.ImageField(blank=True, null=True, upload_to=person.models.profile_pic_upload_path, verbose_name='Profile Picture')),
                ('about', models.TextField(blank=True, verbose_name='About')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('use_business_name', models.BooleanField(default=False, verbose_name='Use Business Name')),
                ('approval_status', models.CharField(choices=[('awaiting_user', 'Awaiting User'), ('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='awaiting_user', help_text='Users cannot edit their profile while pending approval.', max_length=15, verbose_name='Approval Status')),
                ('review_message', models.TextField(blank=True, help_text='The admin selects a message to inform the user after verification.', null=True, verbose_name='Review Message')),
                ('continent_input', models.CharField(blank=True, max_length=100, null=True)),
                ('country_input', models.CharField(blank=True, max_length=100, null=True)),
                ('state_input', models.CharField(blank=True, max_length=100, null=True)),
                ('town_input', models.CharField(blank=True, max_length=100, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date Joined')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('continent', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specific_continent', to='custom_search.continent')),
                ('country', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specific_country', to='custom_search.country')),
                ('state', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specific_state', to='custom_search.state')),
                ('town', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specific_town', to='custom_search.town')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='PendingLocationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typed_town', models.CharField(blank=True, max_length=100, null=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('parent_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pending_person_requests', to='custom_search.state')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='pending_location_request', to='person.person')),
            ],
        ),
        migrations.CreateModel(
            name='Availability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(choices=[('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday'), ('Sunday', 'Sunday')], max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availabilities', to='person.person')),
            ],
        ),
    ]
