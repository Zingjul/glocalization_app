# Generated by Django 5.2.1 on 2025-09-16 18:02

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('custom_search', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=77, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SocialPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='social_icons/')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('availability_scope', models.CharField(choices=[('global', 'Global'), ('continent', 'Continent-wide'), ('country', 'Country-wide'), ('state', 'State-wide'), ('town', 'Town-specific')], default='town', help_text='Defines the scope of availability for this post.', max_length=10)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('author_phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('author_email', models.EmailField(blank=True, max_length=254)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('business_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved')], default='pending', max_length=20)),
                ('post_continent_input', models.CharField(blank=True, max_length=100, null=True)),
                ('post_country_input', models.CharField(blank=True, max_length=100, null=True)),
                ('post_state_input', models.CharField(blank=True, max_length=100, null=True)),
                ('post_town_input', models.CharField(blank=True, max_length=100, null=True)),
                ('color', models.CharField(blank=True, max_length=100, null=True)),
                ('brand', models.CharField(blank=True, max_length=100, null=True)),
                ('condition', models.CharField(blank=True, choices=[('new', 'New'), ('fairly used', 'Fairly Used')], max_length=50, null=True)),
                ('model_version', models.CharField(blank=True, max_length=100, null=True)),
                ('technical_specifications', models.TextField(blank=True, null=True)),
                ('warranty', models.CharField(blank=True, max_length=255, null=True)),
                ('service_details', models.CharField(blank=True, choices=[('yes', 'Yes'), ('no', 'No')], max_length=50, null=True)),
                ('qualifications', models.TextField(blank=True, null=True)),
                ('availability_schedule', models.CharField(blank=True, max_length=255, null=True)),
                ('service_guarantees', models.TextField(blank=True, null=True)),
                ('labor_experience_years', models.PositiveIntegerField(blank=True, null=True)),
                ('labor_availability', models.CharField(blank=True, max_length=255, null=True)),
                ('availability', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.category')),
                ('post_continent', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_specific_continent', to='custom_search.continent')),
                ('post_country', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_specific_country', to='custom_search.country')),
                ('post_state', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_specific_state', to='custom_search.state')),
                ('post_town', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_specific_town', to='custom_search.town')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='PendingLocationRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typed_town', models.CharField(blank=True, max_length=100, null=True)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=False)),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('parent_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_pending_requests', to='custom_search.state')),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='post_location_requests', to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='SocialMediaHandle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('youtube', models.URLField(blank=True, null=True)),
                ('instagram', models.URLField(blank=True, null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('whatsapp', models.URLField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='social_handles', to='posts.post')),
            ],
        ),
    ]
